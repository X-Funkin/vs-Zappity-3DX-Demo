[gd_scene load_steps=64 format=2]

[ext_resource path="res://Main2D.tscn" type="PackedScene" id=1]
[ext_resource path="res://Main3D.gd" type="Script" id=2]
[ext_resource path="res://assets/images/zappity concept v0.png" type="Texture" id=3]
[ext_resource path="res://assets/models/cube room.glb" type="PackedScene" id=4]
[ext_resource path="res://assets/materials/basic floor.tres" type="Material" id=5]
[ext_resource path="res://assets/weeks/zappity/zappity/zappity-voice.ogg" type="AudioStream" id=6]
[ext_resource path="res://assets/scripts/Audio Tracks.gd" type="Script" id=7]
[ext_resource path="res://assets/weeks/zappity/zappity/inst.ogg" type="AudioStream" id=8]
[ext_resource path="res://assets/weeks/zappity/zappity/bf-voice.ogg" type="AudioStream" id=9]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 20, 20 )

[sub_resource type="PlaneMesh" id=2]
size = Vector2( 1.6, 0.9 )

[sub_resource type="VisualShaderNodeScalarConstant" id=3]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 6

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "AS"

[sub_resource type="VisualShaderNodeExpression" id=7]
size = Vector2( 505, 254 )
expression = "vec4 n_tex_read = texture(Background, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 1.0 ]

[sub_resource type="VisualShaderNodeGlobalExpression" id=9]
size = Vector2( 383, 166 )
expression = "uniform sampler2D Screen;
uniform sampler2D Background;"

[sub_resource type="VisualShaderNodeExpression" id=10]
size = Vector2( 505, 254 )
expression = "vec4 n_tex_read = texture(Screen, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=12]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "Brightness"

[sub_resource type="VisualShaderNodeColorConstant" id=14]
constant = Color( 0, 0, 0, 0 )

[sub_resource type="VisualShaderNodeScalarConstant" id=15]

[sub_resource type="VisualShader" id=16]
code = "shader_type spatial;
render_mode cull_disabled, specular_disabled;

uniform float Brightness;


// GlobalExpression:0
	uniform sampler2D Screen;
	uniform sampler2D Background;

void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// Expression:14
	vec3 n_out14p0;
	float n_out14p1;
	n_out14p0 = vec3(0.0, 0.0, 0.0);
	n_out14p1 = 0.0;
	{
		vec4 n_tex_read = texture(Background, n_out5p0.xy);
		n_out14p0 = n_tex_read.rgb;
		n_out14p1 = n_tex_read.a;
	}

// Scalar:10
	float n_out10p0 = 1.000000;

// Scalar:9
	float n_out9p0 = 0.000000;

// Expression:4
	vec3 n_out4p0;
	float n_out4p1;
	n_out4p0 = vec3(0.0, 0.0, 0.0);
	n_out4p1 = 0.0;
	{
		vec4 n_tex_read = texture(Screen, n_out5p0.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// ScalarUniform:7
	float n_out7p0 = Brightness;

// ScalarOp:11
	float n_in11p1 = 0.00000;
	float n_out11p0 = max(n_out7p0, n_in11p1);

// VectorScalarMix:6
	vec3 n_in6p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out6p0 = mix(n_in6p0, n_out4p0, n_out11p0);

// Output:0
	ALBEDO = n_out14p0;
	METALLIC = n_out10p0;
	ROUGHNESS = n_out10p0;
	SPECULAR = n_out9p0;
	EMISSION = n_out6p0;

}

void light() {
// Output:0

}
"
modes/cull = 2
modes/specular = 4
nodes/fragment/0/position = Vector2( 520, 120 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -380, -40 )
nodes/fragment/3/size = Vector2( 383, 166 )
nodes/fragment/3/input_ports = ""
nodes/fragment/3/output_ports = ""
nodes/fragment/3/expression = "uniform sampler2D Screen;
uniform sampler2D Background;"
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( -520, 240 )
nodes/fragment/4/size = Vector2( 505, 254 )
nodes/fragment/4/input_ports = "0,1,uv;"
nodes/fragment/4/output_ports = "0,1,rgb;1,0,alpha;"
nodes/fragment/4/expression = "vec4 n_tex_read = texture(Screen, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( -820, 380 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( 240, 120 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( -140, 140 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( 260, 60 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( 140, 320 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 140, 380 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 40, 100 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( 220, -20 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( 160, 520 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -360, 520 )
nodes/fragment/14/size = Vector2( 505, 254 )
nodes/fragment/14/input_ports = "0,1,uv;"
nodes/fragment/14/output_ports = "0,1,rgb;1,0,alpha;"
nodes/fragment/14/expression = "vec4 n_tex_read = texture(Background, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 420, -20 )
nodes/fragment/connections = PoolIntArray( 5, 0, 4, 0, 4, 0, 6, 1, 9, 0, 0, 4, 10, 0, 0, 2, 10, 0, 0, 3, 7, 0, 11, 0, 11, 0, 6, 2, 6, 0, 0, 5, 14, 0, 15, 0, 4, 0, 15, 1, 5, 0, 14, 0, 14, 0, 0, 0 )

[sub_resource type="ViewportTexture" id=17]
viewport_path = NodePath("Viewport2")

[sub_resource type="ViewportTexture" id=18]
viewport_path = NodePath("Viewport")

[sub_resource type="ShaderMaterial" id=19]
resource_local_to_scene = true
shader = SubResource( 16 )
shader_param/Brightness = 1.1
shader_param/Screen = SubResource( 18 )
shader_param/Background = SubResource( 17 )

[sub_resource type="Environment" id=20]
background_mode = 1
ss_reflections_enabled = true
ss_reflections_max_steps = 256
glow_enabled = true
glow_blend_mode = 1
glow_bicubic_upscale = true

[sub_resource type="CubeMesh" id=21]
size = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="VisualShader" id=22]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -116, 44 )

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 22 )

[sub_resource type="VisualShaderNodeVectorFunc" id=24]
function = 19

[sub_resource type="VisualShaderNodeVec3Uniform" id=25]
uniform_name = "VectorUniform"

[sub_resource type="VisualShaderNodeTexture" id=26]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeScalarConstant" id=27]
constant = 0.2

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorScalarStep" id=29]

[sub_resource type="VisualShaderNodeScalarUniform" id=30]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeVectorFunc" id=31]
function = 33

[sub_resource type="VisualShaderNodeVectorOp" id=32]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=33]
operator = 3

[sub_resource type="VisualShader" id=34]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Scalar:3
	float n_out3p0 = 0.200000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;
	ALPHA_SCISSOR = n_out3p0;

}

void light() {
// Output:0

}
"
nodes/fragment/2/node = SubResource( 26 )
nodes/fragment/2/position = Vector2( -20, 120 )
nodes/fragment/3/node = SubResource( 27 )
nodes/fragment/3/position = Vector2( 120, 440 )
nodes/fragment/4/node = SubResource( 28 )
nodes/fragment/4/position = Vector2( -400, 120 )
nodes/fragment/5/node = SubResource( 29 )
nodes/fragment/5/position = Vector2( -220, 40 )
nodes/fragment/6/node = SubResource( 30 )
nodes/fragment/6/position = Vector2( -500, -60 )
nodes/fragment/7/node = SubResource( 31 )
nodes/fragment/7/position = Vector2( -340, -200 )
nodes/fragment/8/node = SubResource( 32 )
nodes/fragment/8/position = Vector2( -220, -60 )
nodes/fragment/9/node = SubResource( 33 )
nodes/fragment/9/position = Vector2( 160, -160 )
nodes/fragment/10/node = SubResource( 24 )
nodes/fragment/10/position = Vector2( -60, -140 )
nodes/fragment/11/node = SubResource( 25 )
nodes/fragment/11/position = Vector2( -420, -140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 3, 0, 0, 18, 4, 0, 5, 1, 6, 0, 5, 0, 4, 0, 8, 1, 8, 0, 10, 0, 10, 0, 9, 0, 11, 0, 8, 0, 11, 0, 9, 1 )

[sub_resource type="ShaderMaterial" id=35]
shader = SubResource( 34 )

[sub_resource type="VisualShaderNodeColorConstant" id=36]
constant = Color( 0.910156, 0, 0, 1 )

[sub_resource type="VisualShader" id=37]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.910156, 0.000000, 0.000000);
	float n_out2p1 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
modes/cull = 2
nodes/fragment/2/node = SubResource( 36 )
nodes/fragment/2/position = Vector2( 80, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=38]
shader = SubResource( 37 )

[sub_resource type="VisualShaderNodeScalarUniform" id=39]
uniform_name = "Depth"

[sub_resource type="VisualShaderNodeScalarClamp" id=40]

[sub_resource type="VisualShaderNodeScalarUniform" id=41]
uniform_name = "Metallic"

[sub_resource type="VisualShaderNodeScalarUniform" id=42]
uniform_name = "Roughness"

[sub_resource type="VisualShaderNodeScalarUniform" id=43]
uniform_name = "Specular"

[sub_resource type="VisualShaderNodeColorUniform" id=44]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeScalarClamp" id=45]

[sub_resource type="VisualShaderNodeScalarClamp" id=46]

[sub_resource type="VisualShaderNodeScalarClamp" id=47]

[sub_resource type="OpenSimplexNoise" id=48]
period = 4.4

[sub_resource type="NoiseTexture" id=49]
as_normalmap = true
noise = SubResource( 48 )

[sub_resource type="VisualShaderNodeTexture" id=50]
texture = SubResource( 49 )

[sub_resource type="VisualShader" id=51]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform float Metallic;
uniform float Roughness;
uniform float Specular;
uniform sampler2D tex_frg_9;
uniform float Depth;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:2
	float n_out2p0 = Metallic;

// ScalarClamp:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 1.00000;
	float n_out6p0 = clamp(n_out2p0, n_in6p1, n_in6p2);

// ScalarUniform:3
	float n_out3p0 = Roughness;

// ScalarClamp:7
	float n_in7p1 = 0.00000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out3p0, n_in7p1, n_in7p2);

// ScalarUniform:4
	float n_out4p0 = Specular;

// ScalarClamp:8
	float n_in8p1 = 0.00000;
	float n_in8p2 = 1.00000;
	float n_out8p0 = clamp(n_out4p0, n_in8p1, n_in8p2);

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, UV.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// ScalarUniform:10
	float n_out10p0 = Depth;

// ScalarClamp:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 1.00000;
	float n_out11p0 = clamp(n_out10p0, n_in11p1, n_in11p2);

// Output:0
	METALLIC = n_out6p0;
	ROUGHNESS = n_out7p0;
	SPECULAR = n_out8p0;
	NORMALMAP = n_out9p0;
	NORMALMAP_DEPTH = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -166, 298 )
modes/cull = 2
nodes/fragment/0/position = Vector2( 600, 140 )
nodes/fragment/2/node = SubResource( 41 )
nodes/fragment/2/position = Vector2( 20, 260 )
nodes/fragment/3/node = SubResource( 42 )
nodes/fragment/3/position = Vector2( 100, 340 )
nodes/fragment/4/node = SubResource( 43 )
nodes/fragment/4/position = Vector2( 40, 420 )
nodes/fragment/5/node = SubResource( 44 )
nodes/fragment/5/position = Vector2( 0, 80 )
nodes/fragment/6/node = SubResource( 45 )
nodes/fragment/6/position = Vector2( 280, 200 )
nodes/fragment/7/node = SubResource( 46 )
nodes/fragment/7/position = Vector2( 360, 280 )
nodes/fragment/8/node = SubResource( 47 )
nodes/fragment/8/position = Vector2( 360, 380 )
nodes/fragment/9/node = SubResource( 50 )
nodes/fragment/9/position = Vector2( 140, 480 )
nodes/fragment/10/node = SubResource( 39 )
nodes/fragment/10/position = Vector2( -20, 600 )
nodes/fragment/11/node = SubResource( 40 )
nodes/fragment/11/position = Vector2( 240, 540 )
nodes/fragment/connections = PoolIntArray( 2, 0, 6, 0, 6, 0, 0, 2, 3, 0, 7, 0, 7, 0, 0, 3, 4, 0, 8, 0, 8, 0, 0, 4, 9, 0, 0, 8, 10, 0, 11, 0, 11, 0, 0, 9 )

[sub_resource type="ShaderMaterial" id=52]
shader = SubResource( 51 )
shader_param/Metallic = 0.519
shader_param/Roughness = 0.0
shader_param/Specular = null
shader_param/Depth = 0.046

[sub_resource type="Environment" id=53]
background_mode = 1
background_color = Color( 0.4, 0.176471, 0.698039, 1 )

[sub_resource type="World" id=54]
environment = SubResource( 53 )

[node name="Main3D" type="Spatial"]
script = ExtResource( 2 )

[node name="Ground" type="CSGMesh" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.07518, 0 )
visible = false
mesh = SubResource( 1 )
material = ExtResource( 5 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.45605, 3.515 )
keep_aspect = 0
current = true
fov = 76.0

[node name="basic screen" type="CSGMesh" parent="."]
transform = Transform( 3.95998, 0, 0, 0, -1.73096e-07, 3.95998, 0, -3.95998, -1.73096e-07, 0.00117779, 1.90585, -1.66756 )
mesh = SubResource( 2 )
material = SubResource( 19 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1920, 1080 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_update_mode = 3

[node name="Main2D" parent="Viewport" instance=ExtResource( 1 )]
position = Vector2( 960, 540 )

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.23057e-05, 3.04151, 0.513502 )
omni_range = 7.33978

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 20 )

[node name="CSGMesh" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 1.02413, -0.283131, -1.33583 )
mesh = SubResource( 21 )
material = SubResource( 23 )

[node name="CSGMesh2" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 0, 0.0762547, -2.53147 )
mesh = SubResource( 21 )
material = SubResource( 23 )

[node name="CSGMesh3" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 0, -0.691521, -2.53147 )
mesh = SubResource( 21 )
material = SubResource( 23 )

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.436, 0, -0.398 )
material_override = SubResource( 35 )
offset = Vector2( 0, 125 )
texture = ExtResource( 3 )

[node name="cube room" parent="." instance=ExtResource( 4 )]
transform = Transform( 1.254, 0, 0, 0, 0.448, 0, 0, 0, 1, -0.066682, -0.0159065, 2.31044 )

[node name="Cube" parent="cube room" index="0"]
transform = Transform( 4.4425, 0, 0, 0, 4.4425, 0, 0, 0, 4.4425, 0, 0, -0.00114059 )
material/0 = SubResource( 38 )
material/1 = SubResource( 52 )

[node name="Viewport2" type="Viewport" parent="."]
size = Vector2( 1920, 1080 )
own_world = true
world = SubResource( 54 )
render_target_update_mode = 3

[node name="Audio Tracks" type="Spatial" parent="."]
script = ExtResource( 7 )
offset = -15.5

[node name="Zappity Voice" type="AudioStreamPlayer" parent="Audio Tracks"]
stream = ExtResource( 6 )
bus = "Zappity Voice"

[node name="BF Voice" type="AudioStreamPlayer" parent="Audio Tracks"]
stream = ExtResource( 9 )
bus = "BF Voice"

[node name="Instrumentals" type="AudioStreamPlayer" parent="Audio Tracks"]
stream = ExtResource( 8 )
volume_db = -4.181
bus = "Instrumentals"

[connection signal="finished" from="Audio Tracks/Instrumentals" to="Audio Tracks" method="_on_Instrumentals_finished"]

[editable path="cube room"]
