[gd_scene load_steps=37 format=2]

[ext_resource path="res://Main2D.tscn" type="PackedScene" id=1]
[ext_resource path="res://Main3D.gd" type="Script" id=2]

[sub_resource type="PlaneMesh" id=9]
size = Vector2( 20, 20 )

[sub_resource type="VisualShaderNodeScalarUniform" id=31]
uniform_name = "Depth"

[sub_resource type="VisualShaderNodeScalarClamp" id=32]

[sub_resource type="VisualShaderNodeScalarUniform" id=18]
uniform_name = "Metallic"

[sub_resource type="VisualShaderNodeScalarUniform" id=19]
uniform_name = "Roughness"

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "Specular"

[sub_resource type="VisualShaderNodeColorUniform" id=21]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeScalarClamp" id=22]

[sub_resource type="VisualShaderNodeScalarClamp" id=23]

[sub_resource type="VisualShaderNodeScalarClamp" id=24]

[sub_resource type="OpenSimplexNoise" id=33]
period = 4.4

[sub_resource type="NoiseTexture" id=34]
as_normalmap = true
noise = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = SubResource( 34 )

[sub_resource type="VisualShader" id=25]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Metallic;
uniform float Roughness;
uniform float Specular;
uniform sampler2D tex_frg_9;
uniform float Depth;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:2
	float n_out2p0 = Metallic;

// ScalarClamp:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 1.00000;
	float n_out6p0 = clamp(n_out2p0, n_in6p1, n_in6p2);

// ScalarUniform:3
	float n_out3p0 = Roughness;

// ScalarClamp:7
	float n_in7p1 = 0.00000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out3p0, n_in7p1, n_in7p2);

// ScalarUniform:4
	float n_out4p0 = Specular;

// ScalarClamp:8
	float n_in8p1 = 0.00000;
	float n_in8p2 = 1.00000;
	float n_out8p0 = clamp(n_out4p0, n_in8p1, n_in8p2);

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, UV.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// ScalarUniform:10
	float n_out10p0 = Depth;

// ScalarClamp:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 1.00000;
	float n_out11p0 = clamp(n_out10p0, n_in11p1, n_in11p2);

// Output:0
	METALLIC = n_out6p0;
	ROUGHNESS = n_out7p0;
	SPECULAR = n_out8p0;
	NORMALMAP = n_out9p0;
	NORMALMAP_DEPTH = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -76, 111 )
nodes/fragment/0/position = Vector2( 600, 140 )
nodes/fragment/2/node = SubResource( 18 )
nodes/fragment/2/position = Vector2( 20, 260 )
nodes/fragment/3/node = SubResource( 19 )
nodes/fragment/3/position = Vector2( 100, 340 )
nodes/fragment/4/node = SubResource( 20 )
nodes/fragment/4/position = Vector2( 40, 420 )
nodes/fragment/5/node = SubResource( 21 )
nodes/fragment/5/position = Vector2( 0, 80 )
nodes/fragment/6/node = SubResource( 22 )
nodes/fragment/6/position = Vector2( 280, 200 )
nodes/fragment/7/node = SubResource( 23 )
nodes/fragment/7/position = Vector2( 360, 280 )
nodes/fragment/8/node = SubResource( 24 )
nodes/fragment/8/position = Vector2( 360, 380 )
nodes/fragment/9/node = SubResource( 35 )
nodes/fragment/9/position = Vector2( 140, 480 )
nodes/fragment/10/node = SubResource( 31 )
nodes/fragment/10/position = Vector2( -20, 600 )
nodes/fragment/11/node = SubResource( 32 )
nodes/fragment/11/position = Vector2( 240, 540 )
nodes/fragment/connections = PoolIntArray( 2, 0, 6, 0, 6, 0, 0, 2, 3, 0, 7, 0, 7, 0, 0, 3, 4, 0, 8, 0, 8, 0, 0, 4, 9, 0, 0, 8, 10, 0, 11, 0, 11, 0, 0, 9 )

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 25 )
shader_param/Metallic = 1.0
shader_param/Roughness = 0.0
shader_param/Specular = null
shader_param/Depth = 0.046

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 1.6, 0.9 )

[sub_resource type="VisualShaderNodeScalarConstant" id=15]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=17]
operator = 6

[sub_resource type="VisualShaderNodeScalarConstant" id=26]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarUniform" id=30]
uniform_name = "AS"

[sub_resource type="VisualShaderNodeGlobalExpression" id=5]
size = Vector2( 383, 166 )
expression = "uniform sampler2D Screen;"

[sub_resource type="VisualShaderNodeExpression" id=6]
size = Vector2( 505, 254 )
expression = "vec4 n_tex_read = texture(Screen, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=12]
uniform_name = "Brightness"

[sub_resource type="VisualShaderNodeColorConstant" id=13]
constant = Color( 0, 0, 0, 0 )

[sub_resource type="VisualShaderNodeScalarConstant" id=16]

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_disabled;

uniform float Brightness;
uniform float AS;


// GlobalExpression:0
	uniform sampler2D Screen;

void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// Expression:4
	vec3 n_out4p0;
	float n_out4p1;
	n_out4p0 = vec3(0.0, 0.0, 0.0);
	n_out4p1 = 0.0;
	{
		vec4 n_tex_read = texture(Screen, n_out5p0.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// Scalar:10
	float n_out10p0 = 1.000000;

// Scalar:9
	float n_out9p0 = 0.000000;

// ScalarUniform:7
	float n_out7p0 = Brightness;

// ScalarOp:11
	float n_in11p1 = 0.00000;
	float n_out11p0 = max(n_out7p0, n_in11p1);

// VectorScalarMix:6
	vec3 n_in6p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out6p0 = mix(n_in6p0, n_out4p0, n_out11p0);

// ScalarUniform:13
	float n_out13p0 = AS;

// Output:0
	ALPHA = n_out4p1;
	METALLIC = n_out10p0;
	ROUGHNESS = n_out10p0;
	SPECULAR = n_out9p0;
	EMISSION = n_out6p0;
	ALPHA_SCISSOR = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -70, 106 )
modes/cull = 2
modes/depth_draw = 3
modes/specular = 4
nodes/fragment/0/position = Vector2( 520, 120 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -380, -40 )
nodes/fragment/3/size = Vector2( 383, 166 )
nodes/fragment/3/input_ports = ""
nodes/fragment/3/output_ports = ""
nodes/fragment/3/expression = "uniform sampler2D Screen;"
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -420, 220 )
nodes/fragment/4/size = Vector2( 505, 254 )
nodes/fragment/4/input_ports = "0,1,uv;"
nodes/fragment/4/output_ports = "0,1,rgb;1,0,alpha;"
nodes/fragment/4/expression = "vec4 n_tex_read = texture(Screen, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( -660, 280 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( 180, 200 )
nodes/fragment/7/node = SubResource( 12 )
nodes/fragment/7/position = Vector2( -140, 140 )
nodes/fragment/8/node = SubResource( 13 )
nodes/fragment/8/position = Vector2( 260, 60 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( 140, 320 )
nodes/fragment/10/node = SubResource( 15 )
nodes/fragment/10/position = Vector2( 140, 380 )
nodes/fragment/11/node = SubResource( 17 )
nodes/fragment/11/position = Vector2( 40, 100 )
nodes/fragment/12/node = SubResource( 26 )
nodes/fragment/12/position = Vector2( 220, -20 )
nodes/fragment/13/node = SubResource( 30 )
nodes/fragment/13/position = Vector2( 160, 520 )
nodes/fragment/connections = PoolIntArray( 5, 0, 4, 0, 4, 0, 6, 1, 9, 0, 0, 4, 10, 0, 0, 2, 10, 0, 0, 3, 7, 0, 11, 0, 11, 0, 6, 2, 6, 0, 0, 5, 13, 0, 0, 18, 4, 1, 0, 1 )

[sub_resource type="ViewportTexture" id=8]
viewport_path = NodePath("Viewport")

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/Brightness = 1.1
shader_param/AS = 0.5
shader_param/Screen = SubResource( 8 )

[sub_resource type="Environment" id=14]
background_mode = 1
ss_reflections_enabled = true
ss_reflections_max_steps = 256
glow_enabled = true
glow_blend_mode = 1
glow_bicubic_upscale = true

[sub_resource type="CubeMesh" id=27]
size = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="VisualShader" id=28]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -116, 44 )

[sub_resource type="ShaderMaterial" id=29]
shader = SubResource( 28 )

[node name="Main3D" type="Spatial"]
script = ExtResource( 2 )

[node name="Ground" type="CSGMesh" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.07518, 0 )
mesh = SubResource( 9 )
material = SubResource( 10 )

[node name="Camera" type="Camera" parent="."]
current = true

[node name="basic screen" type="CSGMesh" parent="."]
transform = Transform( 2.11878, 0, 0, 0, 1.85229e-07, 2.11878, 0, -2.11878, 1.85229e-07, 0.00117779, 0, -2.00632 )
mesh = SubResource( 1 )
material = SubResource( 4 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1920, 1080 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_update_mode = 3

[node name="Main2D" parent="Viewport" instance=ExtResource( 1 )]
position = Vector2( 960, 540 )

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 6.1862, 0 )
omni_range = 7.33978

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 14 )

[node name="CSGMesh" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 0, 0.0762547, -1.33583 )
mesh = SubResource( 27 )
material = SubResource( 29 )

[node name="CSGMesh2" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 0, 0.0762547, -2.53147 )
mesh = SubResource( 27 )
material = SubResource( 29 )

[node name="CSGMesh3" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 0, -0.691521, -2.53147 )
mesh = SubResource( 27 )
material = SubResource( 29 )
