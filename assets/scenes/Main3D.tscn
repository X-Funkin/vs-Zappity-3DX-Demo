[gd_scene load_steps=102 format=2]

[ext_resource path="res://assets/scenes/Main2D.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/scripts/Main3D.gd" type="Script" id=2]
[ext_resource path="res://assets/images/zappity concept v0.png" type="Texture" id=3]
[ext_resource path="res://assets/models/cube room.glb" type="PackedScene" id=4]
[ext_resource path="res://assets/materials/basic floor.tres" type="Material" id=5]
[ext_resource path="res://assets/weeks/zappity/zappity theme yay-02 bf vocals.wav" type="AudioStream" id=6]
[ext_resource path="res://assets/scripts/Audio Tracks.gd" type="Script" id=7]
[ext_resource path="res://assets/weeks/zappity/zappity theme yay-02 intrumentas.wav" type="AudioStream" id=8]
[ext_resource path="res://assets/weeks/zappity/zappity theme yay-02 zappity vocals.wav" type="AudioStream" id=9]
[ext_resource path="res://assets/scenes/BF.tscn" type="PackedScene" id=10]
[ext_resource path="res://assets/weeks/zappity/assets/characters/boyfriend 3D/Boyfriend 3D.tscn" type="PackedScene" id=11]
[ext_resource path="res://assets/weeks/zappity/zapzPZPAP_health_icon - Copy.png" type="Texture" id=12]
[ext_resource path="res://assets/sounds/missnote1.ogg" type="AudioStream" id=13]
[ext_resource path="res://assets/scripts/Sound Thingies.gd" type="Script" id=14]
[ext_resource path="res://assets/weeks/zappity/assets/textures/hex tile normal map.png" type="Texture" id=15]
[ext_resource path="res://assets/weeks/zappity/assets/textures/hex tile mix.png" type="Texture" id=16]
[ext_resource path="res://assets/scenes/Space Background.tscn" type="PackedScene" id=17]
[ext_resource path="res://assets/weeks/zappity/assets/characters/Zappity/Zappity 3D.tscn" type="PackedScene" id=18]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 20, 20 )

[sub_resource type="PlaneMesh" id=2]
size = Vector2( 1.6, 0.9 )

[sub_resource type="VisualShaderNodeScalarConstant" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 6

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "AS"

[sub_resource type="VisualShaderNodeExpression" id=7]
size = Vector2( 505, 254 )
expression = "vec4 n_tex_read = texture(Background, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 1.0 ]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeGlobalExpression" id=10]
size = Vector2( 383, 166 )
expression = "uniform sampler2D Screen;
uniform sampler2D Background;"

[sub_resource type="VisualShaderNodeExpression" id=11]
size = Vector2( 505, 254 )
expression = "vec4 n_tex_read = texture(Screen, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=13]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "Brightness"

[sub_resource type="VisualShaderNodeColorConstant" id=15]
constant = Color( 0, 0, 0, 0 )

[sub_resource type="VisualShaderNodeScalarConstant" id=16]

[sub_resource type="VisualShader" id=17]
code = "shader_type spatial;
render_mode cull_disabled, specular_disabled;

uniform float Brightness;


// GlobalExpression:0
	uniform sampler2D Screen;
	uniform sampler2D Background;

void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// Expression:14
	vec3 n_out14p0;
	float n_out14p1;
	n_out14p0 = vec3(0.0, 0.0, 0.0);
	n_out14p1 = 0.0;
	{
		vec4 n_tex_read = texture(Background, n_out5p0.xy);
		n_out14p0 = n_tex_read.rgb;
		n_out14p1 = n_tex_read.a;
	}

// Expression:4
	vec3 n_out4p0;
	float n_out4p1;
	n_out4p0 = vec3(0.0, 0.0, 0.0);
	n_out4p1 = 0.0;
	{
		vec4 n_tex_read = texture(Screen, n_out5p0.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// VectorScalarMix:16
	vec3 n_in16p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out16p0 = mix(n_out14p0, n_in16p1, n_out4p1);

// Scalar:10
	float n_out10p0 = 0.000000;

// Scalar:9
	float n_out9p0 = 0.000000;

// ScalarUniform:7
	float n_out7p0 = Brightness;

// ScalarOp:11
	float n_in11p1 = 0.00000;
	float n_out11p0 = max(n_out7p0, n_in11p1);

// VectorScalarMix:6
	vec3 n_in6p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out6p0 = mix(n_in6p0, n_out4p0, n_out11p0);

// Output:0
	ALBEDO = n_out16p0;
	METALLIC = n_out10p0;
	ROUGHNESS = n_out10p0;
	SPECULAR = n_out9p0;
	EMISSION = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -307.972, 67 )
modes/cull = 2
modes/specular = 4
nodes/fragment/0/position = Vector2( 740, 80 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( -380, -40 )
nodes/fragment/3/size = Vector2( 383, 166 )
nodes/fragment/3/input_ports = ""
nodes/fragment/3/output_ports = ""
nodes/fragment/3/expression = "uniform sampler2D Screen;
uniform sampler2D Background;"
nodes/fragment/4/node = SubResource( 11 )
nodes/fragment/4/position = Vector2( -520, 240 )
nodes/fragment/4/size = Vector2( 505, 254 )
nodes/fragment/4/input_ports = "0,1,uv;"
nodes/fragment/4/output_ports = "0,1,rgb;1,0,alpha;"
nodes/fragment/4/expression = "vec4 n_tex_read = texture(Screen, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"
nodes/fragment/5/node = SubResource( 12 )
nodes/fragment/5/position = Vector2( -820, 380 )
nodes/fragment/6/node = SubResource( 13 )
nodes/fragment/6/position = Vector2( 240, 120 )
nodes/fragment/7/node = SubResource( 14 )
nodes/fragment/7/position = Vector2( -140, 140 )
nodes/fragment/8/node = SubResource( 15 )
nodes/fragment/8/position = Vector2( 260, 60 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( 320, 420 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 140, 240 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 60, 100 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( 220, -20 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( 300, 540 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -360, 520 )
nodes/fragment/14/size = Vector2( 505, 254 )
nodes/fragment/14/input_ports = "0,1,uv;"
nodes/fragment/14/output_ports = "0,1,rgb;1,0,alpha;"
nodes/fragment/14/expression = "vec4 n_tex_read = texture(Background, uv.xy);
rgb = n_tex_read.rgb;
alpha = n_tex_read.a;"
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 420, -20 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( 380, 300 )
nodes/fragment/connections = PoolIntArray( 5, 0, 4, 0, 4, 0, 6, 1, 9, 0, 0, 4, 10, 0, 0, 2, 10, 0, 0, 3, 7, 0, 11, 0, 11, 0, 6, 2, 6, 0, 0, 5, 14, 0, 15, 0, 4, 0, 15, 1, 5, 0, 14, 0, 4, 1, 16, 2, 14, 0, 16, 0, 16, 0, 0, 0 )

[sub_resource type="ViewportTexture" id=18]
viewport_path = NodePath("Space Viewport")

[sub_resource type="ViewportTexture" id=19]
viewport_path = NodePath("Viewport")

[sub_resource type="ShaderMaterial" id=20]
resource_local_to_scene = true
shader = SubResource( 17 )
shader_param/Brightness = 1.1
shader_param/Screen = SubResource( 19 )
shader_param/Background = SubResource( 18 )

[sub_resource type="Environment" id=21]
background_mode = 1
ss_reflections_enabled = true
ss_reflections_max_steps = 256
glow_enabled = true
glow_blend_mode = 1
glow_bicubic_upscale = true

[sub_resource type="CubeMesh" id=22]
size = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="VisualShader" id=23]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -116, 44 )

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 23 )

[sub_resource type="VisualShaderNodeVectorFunc" id=25]
function = 19

[sub_resource type="VisualShaderNodeVec3Uniform" id=26]
uniform_name = "VectorUniform"

[sub_resource type="VisualShaderNodeTexture" id=27]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeScalarConstant" id=28]
constant = 0.2

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorScalarStep" id=30]

[sub_resource type="VisualShaderNodeScalarUniform" id=31]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeVectorFunc" id=32]
function = 33

[sub_resource type="VisualShaderNodeVectorOp" id=33]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=34]
operator = 3

[sub_resource type="VisualShader" id=35]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Scalar:3
	float n_out3p0 = 0.200000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;
	ALPHA_SCISSOR = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 99 )
nodes/fragment/2/node = SubResource( 27 )
nodes/fragment/2/position = Vector2( -20, 120 )
nodes/fragment/3/node = SubResource( 28 )
nodes/fragment/3/position = Vector2( 120, 440 )
nodes/fragment/4/node = SubResource( 29 )
nodes/fragment/4/position = Vector2( -400, 120 )
nodes/fragment/5/node = SubResource( 30 )
nodes/fragment/5/position = Vector2( -220, 40 )
nodes/fragment/6/node = SubResource( 31 )
nodes/fragment/6/position = Vector2( -500, -60 )
nodes/fragment/7/node = SubResource( 32 )
nodes/fragment/7/position = Vector2( -340, -200 )
nodes/fragment/8/node = SubResource( 33 )
nodes/fragment/8/position = Vector2( -220, -60 )
nodes/fragment/9/node = SubResource( 34 )
nodes/fragment/9/position = Vector2( 160, -160 )
nodes/fragment/10/node = SubResource( 25 )
nodes/fragment/10/position = Vector2( -60, -140 )
nodes/fragment/11/node = SubResource( 26 )
nodes/fragment/11/position = Vector2( -420, -140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 3, 0, 0, 18, 4, 0, 5, 1, 6, 0, 5, 0, 4, 0, 8, 1, 8, 0, 10, 0, 10, 0, 9, 0, 11, 0, 8, 0, 11, 0, 9, 1 )

[sub_resource type="ShaderMaterial" id=36]
shader = SubResource( 35 )

[sub_resource type="VisualShaderNodeColorUniform" id=37]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeScalarUniform" id=38]
uniform_name = "Metallic"

[sub_resource type="VisualShaderNodeScalarUniform" id=39]
uniform_name = "Roughness"

[sub_resource type="VisualShaderNodeScalarUniform" id=40]
uniform_name = "Specular"

[sub_resource type="VisualShader" id=41]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform vec4 Color : hint_color;
uniform float Metallic;
uniform float Roughness;
uniform float Specular;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = Color.rgb;
	float n_out2p1 = Color.a;

// ScalarUniform:3
	float n_out3p0 = Metallic;

// ScalarUniform:4
	float n_out4p0 = Roughness;

// ScalarUniform:5
	float n_out5p0 = Specular;

// Output:0
	ALBEDO = n_out2p0;
	METALLIC = n_out3p0;
	ROUGHNESS = n_out4p0;
	SPECULAR = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -28.826, 330.739 )
modes/cull = 2
nodes/fragment/2/node = SubResource( 37 )
nodes/fragment/2/position = Vector2( 80, 160 )
nodes/fragment/3/node = SubResource( 38 )
nodes/fragment/3/position = Vector2( 60, 280 )
nodes/fragment/4/node = SubResource( 39 )
nodes/fragment/4/position = Vector2( 60, 340 )
nodes/fragment/5/node = SubResource( 40 )
nodes/fragment/5/position = Vector2( 70, 350 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 0, 2, 4, 0, 0, 3, 5, 0, 0, 4 )

[sub_resource type="ShaderMaterial" id=42]
shader = SubResource( 41 )
shader_param/Color = Color( 1, 1, 1, 1 )
shader_param/Metallic = 0.58
shader_param/Roughness = 0.0
shader_param/Specular = 1.0

[sub_resource type="VisualShaderNodeScalarUniform" id=43]
uniform_name = "Depth"

[sub_resource type="VisualShaderNodeScalarClamp" id=44]

[sub_resource type="VisualShaderNodeTexture" id=45]
texture = ExtResource( 15 )

[sub_resource type="VisualShaderNodeInput" id=46]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=47]
texture = ExtResource( 16 )

[sub_resource type="VisualShaderNodeSwitch" id=48]

[sub_resource type="VisualShaderNodeCompare" id=49]
default_input_values = [ 0, 0.0, 1, 0.2, 2, 1e-05 ]
function = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=50]
uniform_name = "Metallic"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=51]

[sub_resource type="VisualShaderNodeInput" id=52]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorUniform" id=53]
uniform_name = "First_Line_Color"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=54]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ), 2, 0.5 ]

[sub_resource type="VisualShaderNodeColorUniform" id=55]
uniform_name = "First_Glow_Color"

[sub_resource type="VisualShaderNodeVectorOp" id=56]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=57]
uniform_name = "UV_Scale"

[sub_resource type="VisualShaderNodeVectorOp" id=58]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=59]
uniform_name = "UV_Scale_2"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=60]

[sub_resource type="VisualShaderNodeScalarUniform" id=61]
uniform_name = "Roughness"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=62]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=63]
uniform_name = "Line_Brightness"

[sub_resource type="VisualShaderNodeScalarUniform" id=64]
uniform_name = "Line_Split"

[sub_resource type="VisualShaderNodeCompare" id=65]
function = 5

[sub_resource type="VisualShaderNodeInput" id=66]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=67]

[sub_resource type="VisualShaderNodeColorUniform" id=68]
uniform_name = "Second_Line_Color"

[sub_resource type="VisualShaderNodeSwitch" id=69]

[sub_resource type="VisualShaderNodeColorUniform" id=70]
uniform_name = "Second_Glow_Color"

[sub_resource type="VisualShaderNodeSwitch" id=71]

[sub_resource type="VisualShaderNodeScalarUniform" id=72]
uniform_name = "Specular"

[sub_resource type="VisualShaderNodeColorUniform" id=73]
uniform_name = "Base_Color"

[sub_resource type="VisualShaderNodeScalarClamp" id=74]

[sub_resource type="VisualShaderNodeScalarClamp" id=75]

[sub_resource type="VisualShaderNodeScalarClamp" id=76]

[sub_resource type="OpenSimplexNoise" id=77]
period = 4.4

[sub_resource type="NoiseTexture" id=78]
as_normalmap = true
noise = SubResource( 77 )

[sub_resource type="VisualShaderNodeTexture" id=79]
texture = SubResource( 78 )

[sub_resource type="VisualShader" id=80]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform vec3 UV_Scale;
uniform float UV_Scale_2;
uniform sampler2D tex_frg_16;
uniform vec4 Base_Color : hint_color;
uniform float Line_Split;
uniform vec4 First_Line_Color : hint_color;
uniform vec4 Second_Line_Color : hint_color;
uniform float Metallic;
uniform float Roughness;
uniform float Specular;
uniform vec4 First_Glow_Color : hint_color;
uniform vec4 Second_Glow_Color : hint_color;
uniform float Line_Brightness;
uniform sampler2D tex_frg_12;
uniform float Depth;



void vertex() {
// Output:0

}

void fragment() {
// Input:21
	vec3 n_out21p0 = vec3(UV, 0.0);

// VectorUniform:26
	vec3 n_out26p0 = UV_Scale;

// ScalarUniform:28
	float n_out28p0 = UV_Scale_2;

// VectorScalarMix:29
	vec3 n_in29p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out29p0 = mix(n_in29p0, n_out26p0, n_out28p0);

// VectorOp:25
	vec3 n_out25p0 = n_out21p0 * n_out29p0;

// Texture:16
	vec4 tex_frg_16_read = texture(tex_frg_16, n_out25p0.xy);
	vec3 n_out16p0 = tex_frg_16_read.rgb;
	float n_out16p1 = tex_frg_16_read.a;

// Compare:18
	float n_in18p1 = 0.20000;
	bool n_out18p0 = dot(n_out16p0, vec3(0.333333, 0.333333, 0.333333))>=n_in18p1;

// ColorUniform:5
	vec3 n_out5p0 = Base_Color.rgb;
	float n_out5p1 = Base_Color.a;

// Input:34
	vec3 n_out34p0 = vec3(UV, 0.0);

// VectorDecompose:35
	float n_out35p0 = n_out34p0.x;
	float n_out35p1 = n_out34p0.y;
	float n_out35p2 = n_out34p0.z;

// ScalarUniform:32
	float n_out32p0 = Line_Split;

// Compare:33
	bool n_out33p0 = n_out35p0<=n_out32p0;

// ColorUniform:22
	vec3 n_out22p0 = First_Line_Color.rgb;
	float n_out22p1 = First_Line_Color.a;

// ColorUniform:36
	vec3 n_out36p0 = Second_Line_Color.rgb;
	float n_out36p1 = Second_Line_Color.a;

// VectorSwitch:37
	vec3 n_out37p0;
	if(n_out33p0)
	{
		n_out37p0 = n_out22p0;
	}
	else
	{
		n_out37p0 = n_out36p0;
	}

// VectorSwitch:17
	vec3 n_out17p0;
	if(n_out18p0)
	{
		n_out17p0 = n_out5p0;
	}
	else
	{
		n_out17p0 = n_out37p0;
	}

// ScalarUniform:2
	float n_out2p0 = Metallic;

// ScalarClamp:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 1.00000;
	float n_out6p0 = clamp(n_out2p0, n_in6p1, n_in6p2);

// ScalarUniform:3
	float n_out3p0 = Roughness;

// ScalarClamp:7
	float n_in7p1 = 0.00000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out3p0, n_in7p1, n_in7p2);

// ScalarUniform:4
	float n_out4p0 = Specular;

// ScalarClamp:8
	float n_in8p1 = 0.00000;
	float n_in8p2 = 1.00000;
	float n_out8p0 = clamp(n_out4p0, n_in8p1, n_in8p2);

// ColorUniform:24
	vec3 n_out24p0 = First_Glow_Color.rgb;
	float n_out24p1 = First_Glow_Color.a;

// ColorUniform:38
	vec3 n_out38p0 = Second_Glow_Color.rgb;
	float n_out38p1 = Second_Glow_Color.a;

// VectorSwitch:39
	vec3 n_out39p0;
	if(n_out33p0)
	{
		n_out39p0 = n_out24p0;
	}
	else
	{
		n_out39p0 = n_out38p0;
	}

// ScalarUniform:31
	float n_out31p0 = Line_Brightness;

// VectorScalarMix:30
	vec3 n_in30p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out30p0 = mix(n_in30p0, n_out39p0, n_out31p0);

// VectorScalarMix:23
	vec3 n_in23p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out23p0 = mix(n_out30p0, n_in23p1, (n_out18p0 ? 1.0 : 0.0));

// Input:13
	vec3 n_out13p0 = vec3(UV, 0.0);

// VectorOp:27
	vec3 n_out27p0 = n_out13p0 * n_out29p0;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, n_out27p0.xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// ScalarUniform:10
	float n_out10p0 = Depth;

// ScalarClamp:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 1.00000;
	float n_out11p0 = clamp(n_out10p0, n_in11p1, n_in11p2);

// Output:0
	ALBEDO = n_out17p0;
	METALLIC = n_out6p0;
	ROUGHNESS = n_out7p0;
	SPECULAR = n_out8p0;
	EMISSION = n_out23p0;
	NORMALMAP = n_out12p0;
	NORMALMAP_DEPTH = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -370.581, -300 )
modes/cull = 2
nodes/fragment/0/position = Vector2( 840, -120 )
nodes/fragment/2/node = SubResource( 50 )
nodes/fragment/2/position = Vector2( 20, 260 )
nodes/fragment/3/node = SubResource( 61 )
nodes/fragment/3/position = Vector2( 100, 340 )
nodes/fragment/4/node = SubResource( 72 )
nodes/fragment/4/position = Vector2( 40, 420 )
nodes/fragment/5/node = SubResource( 73 )
nodes/fragment/5/position = Vector2( 80, -220 )
nodes/fragment/6/node = SubResource( 74 )
nodes/fragment/6/position = Vector2( 280, 200 )
nodes/fragment/7/node = SubResource( 75 )
nodes/fragment/7/position = Vector2( 400, 160 )
nodes/fragment/8/node = SubResource( 76 )
nodes/fragment/8/position = Vector2( 380, 200 )
nodes/fragment/9/node = SubResource( 79 )
nodes/fragment/9/position = Vector2( 120, 680 )
nodes/fragment/10/node = SubResource( 43 )
nodes/fragment/10/position = Vector2( -60, 420 )
nodes/fragment/11/node = SubResource( 44 )
nodes/fragment/11/position = Vector2( 320, 340 )
nodes/fragment/12/node = SubResource( 45 )
nodes/fragment/12/position = Vector2( 420, 440 )
nodes/fragment/13/node = SubResource( 46 )
nodes/fragment/13/position = Vector2( -60, 519 )
nodes/fragment/16/node = SubResource( 47 )
nodes/fragment/16/position = Vector2( -80, -20 )
nodes/fragment/17/node = SubResource( 48 )
nodes/fragment/17/position = Vector2( 580, -20 )
nodes/fragment/18/node = SubResource( 49 )
nodes/fragment/18/position = Vector2( 160, 60 )
nodes/fragment/20/node = SubResource( 51 )
nodes/fragment/20/position = Vector2( -320, -120 )
nodes/fragment/21/node = SubResource( 52 )
nodes/fragment/21/position = Vector2( -520, -60 )
nodes/fragment/22/node = SubResource( 53 )
nodes/fragment/22/position = Vector2( 100, -100 )
nodes/fragment/23/node = SubResource( 54 )
nodes/fragment/23/position = Vector2( 580, -200 )
nodes/fragment/24/node = SubResource( 55 )
nodes/fragment/24/position = Vector2( 260, -340 )
nodes/fragment/25/node = SubResource( 56 )
nodes/fragment/25/position = Vector2( -280, 40 )
nodes/fragment/26/node = SubResource( 57 )
nodes/fragment/26/position = Vector2( -700, 260 )
nodes/fragment/27/node = SubResource( 58 )
nodes/fragment/27/position = Vector2( 220, 540 )
nodes/fragment/28/node = SubResource( 59 )
nodes/fragment/28/position = Vector2( -640, 380 )
nodes/fragment/29/node = SubResource( 60 )
nodes/fragment/29/position = Vector2( -400, 200 )
nodes/fragment/30/node = SubResource( 62 )
nodes/fragment/30/position = Vector2( 520, -320 )
nodes/fragment/31/node = SubResource( 63 )
nodes/fragment/31/position = Vector2( 240, -180 )
nodes/fragment/32/node = SubResource( 64 )
nodes/fragment/32/position = Vector2( -160, -320 )
nodes/fragment/33/node = SubResource( 65 )
nodes/fragment/33/position = Vector2( 60, -420 )
nodes/fragment/34/node = SubResource( 66 )
nodes/fragment/34/position = Vector2( -400, -300 )
nodes/fragment/35/node = SubResource( 67 )
nodes/fragment/35/position = Vector2( -200, -240 )
nodes/fragment/36/node = SubResource( 68 )
nodes/fragment/36/position = Vector2( 100, 0 )
nodes/fragment/37/node = SubResource( 69 )
nodes/fragment/37/position = Vector2( 340, -120 )
nodes/fragment/38/node = SubResource( 70 )
nodes/fragment/38/position = Vector2( 240, -200 )
nodes/fragment/39/node = SubResource( 71 )
nodes/fragment/39/position = Vector2( 460, -420 )
nodes/fragment/connections = PoolIntArray( 2, 0, 6, 0, 6, 0, 0, 2, 3, 0, 7, 0, 7, 0, 0, 3, 4, 0, 8, 0, 8, 0, 0, 4, 10, 0, 11, 0, 11, 0, 0, 9, 12, 0, 0, 8, 16, 0, 18, 0, 21, 0, 20, 1, 18, 0, 17, 0, 17, 0, 0, 0, 5, 0, 17, 1, 18, 0, 23, 2, 23, 0, 0, 5, 21, 0, 25, 0, 25, 0, 16, 0, 13, 0, 27, 0, 27, 0, 12, 0, 28, 0, 29, 2, 26, 0, 29, 1, 29, 0, 27, 1, 29, 0, 25, 1, 31, 0, 30, 2, 30, 0, 23, 0, 32, 0, 33, 1, 34, 0, 35, 0, 35, 0, 33, 0, 33, 0, 37, 0, 22, 0, 37, 1, 36, 0, 37, 2, 37, 0, 17, 2, 33, 0, 39, 0, 24, 0, 39, 1, 38, 0, 39, 2, 39, 0, 30, 1 )

[sub_resource type="ShaderMaterial" id=81]
shader = SubResource( 80 )
shader_param/UV_Scale = Vector3( 1, 0.707, 0 )
shader_param/UV_Scale_2 = 3.45
shader_param/Base_Color = Color( 0.592157, 0.592157, 0.592157, 1 )
shader_param/Line_Split = 0.5
shader_param/First_Line_Color = Color( 0.380392, 0.658824, 1, 1 )
shader_param/Second_Line_Color = Color( 0.380392, 0.658824, 1, 1 )
shader_param/Metallic = 0.5
shader_param/Roughness = 0.0
shader_param/Specular = 1.0
shader_param/First_Glow_Color = Color( 0, 0, 1, 1 )
shader_param/Second_Glow_Color = Color( 0, 0, 1, 1 )
shader_param/Line_Brightness = 2.0
shader_param/Depth = 0.066

[sub_resource type="Environment" id=82]
background_mode = 1
background_color = Color( 0.4, 0.176471, 0.698039, 1 )

[sub_resource type="World" id=83]
environment = SubResource( 82 )

[node name="Main3D" type="Spatial" groups=[
"Enemy Hit Recievers",
"Player Hit Recievers",
"Player Input Recievers",
"Player Miss Recievers",
]]
script = ExtResource( 2 )
song_name = "Zappity"
freeplay_icon = ExtResource( 12 )
easy_chart = "res://assets/weeks/zappity/zappity/zappity-chart-hard.json"
normal_chart = "res://assets/weeks/zappity/zappity/zappity-chart-hard.json"
hard_chart = "res://assets/weeks/zappity/zappity/zappity-chart-hard.json"
bpm = 240.0
player_vocals = NodePath("Audio Tracks/BF Voice")
instrumentals = NodePath("Audio Tracks/Instrumentals")
enemy_vocals = NodePath("Audio Tracks/Zappity Voice")
sounds_path = NodePath("Sound Thingies")

[node name="BF" parent="." groups=[
"Player Hit Recievers",
] instance=ExtResource( 10 )]
transform = Transform( 0.4, 0, 0, 0, 0.4, 0, 0, 0, 1, 3.16968, 0, -1.22972 )
visible = false

[node name="Zappity 3D" parent="." groups=[
"Count Down Recievers",
"Enemy Input Recievers",
"Song Time Recievers",
] instance=ExtResource( 18 )]
transform = Transform( 0.438959, 0, 0, 0, 0.438959, 0, 0, 0, 0.438959, -3.09291, -0.0382277, -1.08908 )
bop_on_beat = 2

[node name="Boyfriend 3D" parent="." groups=[
"Count Down Recievers",
"Player Hit Recievers",
"Player Input Recievers",
"Player Miss Recievers",
"Song Time Recievers",
] instance=ExtResource( 11 )]
transform = Transform( 0.331012, 0, 0, 0, 0.331012, 0, 0, 0, 0.331012, 3.08171, 0, -1.05437 )
player = true
bop_on_beat = 2

[node name="Ground" type="CSGMesh" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.07518, 0 )
visible = false
mesh = SubResource( 1 )
material = ExtResource( 5 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.45605, 3.79175 )
keep_aspect = 0
current = true
fov = 76.0

[node name="basic screen" type="CSGMesh" parent="."]
transform = Transform( 3.95998, 0, 0, 0, -1.73096e-07, 3.95998, 0, -3.95998, -1.73096e-07, 0.00117779, 1.90585, -1.66756 )
mesh = SubResource( 2 )
material = SubResource( 20 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1920, 1080 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_update_mode = 3

[node name="Main2D" parent="Viewport" instance=ExtResource( 1 )]
position = Vector2( 960, 540 )

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.23057e-05, 3.04151, 1.49896 )
light_energy = 3.36
omni_range = 7.33978

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 21 )

[node name="CSGMesh" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 1.02413, -0.283131, -1.33583 )
mesh = SubResource( 22 )
material = SubResource( 24 )

[node name="CSGMesh2" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 0, 0.0762547, -2.53147 )
mesh = SubResource( 22 )
material = SubResource( 24 )

[node name="CSGMesh3" type="CSGMesh" parent="."]
transform = Transform( 0.678046, 0.140721, -0.721423, -0.715328, -0.0993299, -0.691693, -0.168995, 0.985054, 0.0333113, 0, -0.691521, -2.53147 )
mesh = SubResource( 22 )
material = SubResource( 24 )

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.11056, 0, -0.94498 )
visible = false
material_override = SubResource( 36 )
offset = Vector2( 0, 125 )
texture = ExtResource( 3 )

[node name="cube room" parent="." instance=ExtResource( 4 )]
transform = Transform( 1.254, 0, 0, 0, 0.448, 0, 0, 0, 1, 0, 0, 2.31 )

[node name="Cube" parent="cube room" index="0"]
transform = Transform( 4.4425, 0, 0, 0, 4.4425, 0, 0, 0, 4.4425, 0, 0, -0.00114059 )
material/0 = SubResource( 42 )
material/1 = SubResource( 81 )

[node name="Space Viewport" type="Viewport" parent="."]
size = Vector2( 1280, 720 )
own_world = true
world = SubResource( 83 )
render_target_update_mode = 3

[node name="Space Background" parent="Space Viewport" instance=ExtResource( 17 )]

[node name="Audio Tracks" type="Spatial" parent="."]
script = ExtResource( 7 )
offset_ms = -15.5
bpm = 240.0
count_down = 8

[node name="Zappity Voice" type="AudioStreamPlayer" parent="Audio Tracks"]
stream = ExtResource( 9 )
bus = "Zappity Voice"

[node name="BF Voice" type="AudioStreamPlayer" parent="Audio Tracks"]
stream = ExtResource( 6 )
volume_db = -6.0
bus = "BF Voice"

[node name="Instrumentals" type="AudioStreamPlayer" parent="Audio Tracks"]
stream = ExtResource( 8 )
volume_db = -4.181
bus = "Instrumentals"

[node name="Count Down Timer" type="Timer" parent="Audio Tracks"]
one_shot = true

[node name="Beat Timer" type="Timer" parent="Audio Tracks"]

[node name="Sound Thingies" type="Spatial" parent="."]
script = ExtResource( 14 )

[node name="Player Miss Sound" type="AudioStreamPlayer" parent="Sound Thingies"]
stream = ExtResource( 13 )
volume_db = -7.0

[connection signal="finished" from="Audio Tracks/Instrumentals" to="Audio Tracks" method="_on_Instrumentals_finished"]
[connection signal="timeout" from="Audio Tracks/Count Down Timer" to="Audio Tracks" method="_on_Count_Down_Timer_timeout"]
[connection signal="timeout" from="Audio Tracks/Beat Timer" to="Audio Tracks" method="_on_Beat_Timer_timeout"]

[editable path="cube room"]
