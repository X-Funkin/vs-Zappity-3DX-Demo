[gd_scene load_steps=29 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://assets/images/mask.png" type="Texture" id=2]
[ext_resource path="res://assets/scripts/OS Box.gd" type="Script" id=3]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=3]

[sub_resource type="VisualShaderNodeCompare" id=4]
function = 5

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;
uniform float ScalarUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarUniform:6
	float n_out6p0 = ScalarUniform;

// Compare:5
	bool n_out5p0 = n_out3p0<=n_out6p0;

// Output:0
	COLOR.rgb = vec3(n_out5p0 ? 1.0 : 0.0);
	COLOR.a = n_out5p0 ? 1.0 : 0.0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -181, -40 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 680, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -120, 60 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 120, 0 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 600, 0 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 340, 40 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -40, 160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 5, 0, 5, 0, 0, 0, 6, 0, 5, 1, 5, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/ScalarUniform = 0.0

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="ProxyTexture" id=9]
flags = 4
base = SubResource( 8 )

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeGlobalExpression" id=16]
size = Vector2( 250, 150 )
expression = "uniform float Reveal = 0.0;"

[sub_resource type="VisualShaderNodeExpression" id=17]
size = Vector2( 408, 248 )
expression = "thingy = Reveal;"

[sub_resource type="VisualShaderNodeScalarInterp" id=25]

[sub_resource type="VisualShaderNodeTextureUniform" id=11]
uniform_name = "TextureUniform"
color_default = 1

[sub_resource type="VisualShaderNodeVectorScalarMix" id=18]

[sub_resource type="VisualShaderNodeCompare" id=19]
function = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id=20]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=22]

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 31

[sub_resource type="VisualShader" id=12]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D TextureUniform : hint_black;


// GlobalExpression:0
	uniform float Reveal = 0.0;

void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Expression:12
	float n_out12p0;
	n_out12p0 = 0.0;
	{
		n_out12p0 = Reveal;
	}

// ScalarOp:10
	float n_in10p1 = 2.00000;
	float n_out10p0 = n_out12p0 * n_in10p1;

// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out7p0.x;
	float n_out6p1 = n_out7p0.y;
	float n_out6p2 = n_out7p0.z;

// ScalarFunc:9
	float n_out9p0 = 1.0 - n_out6p1;

// ScalarOp:8
	float n_out8p0 = n_out6p0 + n_out9p0;

// Compare:5
	bool n_out5p0 = n_out10p0>=n_out8p0;

// VectorScalarMix:4
	vec3 n_in4p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out4p0 = mix(n_in4p0, n_out2p0, n_out5p0 ? 1.0 : 0.0);

// ScalarMix:13
	float n_in13p0 = 0.00000;
	float n_out13p0 = mix(n_in13p0, n_out2p1, n_out5p0 ? 1.0 : 0.0);

// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = n_out13p0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -95, -17 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( 760, 100 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( 0, 240 )
nodes/fragment/4/node = SubResource( 18 )
nodes/fragment/4/position = Vector2( 240, 60 )
nodes/fragment/5/node = SubResource( 19 )
nodes/fragment/5/position = Vector2( 20, 20 )
nodes/fragment/6/node = SubResource( 20 )
nodes/fragment/6/position = Vector2( -540, 260 )
nodes/fragment/7/node = SubResource( 21 )
nodes/fragment/7/position = Vector2( -680, 240 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( -180, 180 )
nodes/fragment/9/node = SubResource( 23 )
nodes/fragment/9/position = Vector2( -380, 140 )
nodes/fragment/10/node = SubResource( 15 )
nodes/fragment/10/position = Vector2( -200, 40 )
nodes/fragment/11/node = SubResource( 16 )
nodes/fragment/11/position = Vector2( -720, -120 )
nodes/fragment/11/size = Vector2( 250, 150 )
nodes/fragment/11/input_ports = ""
nodes/fragment/11/output_ports = ""
nodes/fragment/11/expression = "uniform float Reveal = 0.0;"
nodes/fragment/12/node = SubResource( 17 )
nodes/fragment/12/position = Vector2( -1060, 0 )
nodes/fragment/12/size = Vector2( 408, 248 )
nodes/fragment/12/input_ports = ""
nodes/fragment/12/output_ports = "0,0,thingy;"
nodes/fragment/12/expression = "thingy = Reveal;"
nodes/fragment/13/node = SubResource( 25 )
nodes/fragment/13/position = Vector2( 540, -20 )
nodes/fragment/connections = PoolIntArray( 7, 0, 6, 0, 6, 0, 8, 0, 6, 1, 9, 0, 9, 0, 8, 1, 8, 0, 5, 1, 10, 0, 5, 0, 5, 0, 4, 2, 2, 0, 4, 1, 12, 0, 10, 0, 5, 0, 13, 2, 13, 0, 0, 1, 4, 0, 0, 0, 2, 1, 13, 1 )

[sub_resource type="ViewportTexture" id=24]
viewport_path = NodePath("Viewport")

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = SubResource( 12 )
shader_param/Reveal = 0.0
shader_param/TextureUniform = SubResource( 24 )

[sub_resource type="QuadMesh" id=14]
size = Vector2( 1920, 1080 )

[sub_resource type="Animation" id=10]
resource_name = "Open Window"
tracks/0/type = "bezier"
tracks/0/path = NodePath("OS Box Borders:material:shader_param/ScalarUniform")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.5, 0, 1, -1, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Window Contents:material:shader_param/Reveal")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.5, 0, 1, -1, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("Label:percent_visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.5, 0, 1, -1, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[node name="OS Box" type="Node2D"]
script = ExtResource( 3 )
window_name = "text"
width = 1920
height = 1080

[node name="OS Box Borders" type="Line2D" parent="."]
material = SubResource( 7 )
z_index = 1
points = PoolVector2Array( 0, -100, 300, -100, 400, 0, 1920, 0, 1920, 1080, 0, 1080, 0, -100 )
width = 13.204
default_color = Color( 1, 1, 1, 1 )
texture = SubResource( 9 )
texture_mode = 2

[node name="icon" type="Sprite" parent="OS Box Borders"]
visible = false
position = Vector2( 869.414, 551.64 )
scale = Vector2( 12.8555, 12.8555 )
texture = ExtResource( 1 )

[node name="Label" type="Label" parent="."]
margin_left = 6.35678
margin_top = -73.9782
margin_right = 72.3568
margin_bottom = -59.9782
rect_scale = Vector2( 4.51126, 4.51915 )
text = "text"
valign = 2
percent_visible = 0.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Window Contents" type="MeshInstance2D" parent="."]
material = SubResource( 13 )
position = Vector2( 960, 540 )
mesh = SubResource( 14 )

[node name="OS Box Animation" type="AnimationPlayer" parent="."]
playback_speed = 2.0
"anims/Open Window" = SubResource( 10 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1920, 1080 )
transparent_bg = true
usage = 0
render_target_update_mode = 3
